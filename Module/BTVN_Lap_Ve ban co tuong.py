{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "d5f119c6",
   "metadata": {},
   "outputs": [],
   "source": [
    "def vebancotuong(a):\n",
    "    '''Vẽ bàn cờ tướng'''\n",
    "    import turtle\n",
    "\n",
    "    t1 = turtle.Turtle()\n",
    "    t1.speed(0)\n",
    "    t1.penup()\n",
    "    t1.setpos(-200,225)\n",
    "    t1.pendown()\n",
    "    t1.pensize(2)\n",
    "    t1.hideturtle()\n",
    "    def square(x):\n",
    "        t1.fd(x)\n",
    "        t1.left(90)\n",
    "        t1.fd(x)\n",
    "        t1.left(90)\n",
    "        t1.fd(x)\n",
    "        t1.left(90)\n",
    "        t1.fd(x)\n",
    "        t1.left(90)\n",
    "        t1.fd(x)\n",
    "\n",
    "    def eight_squares(x):\n",
    "        for i in range(1,9):\n",
    "            square(x)\n",
    "    i=225 \n",
    "    while i>25:\n",
    "        t1.penup()\n",
    "        t1.setpos(-200, i)\n",
    "        t1.pendown()\n",
    "        eight_squares(50)\n",
    "        i-=50\n",
    "\n",
    "    t1.penup()\n",
    "    t1.setpos(-200, 75)\n",
    "    t1.pendown()\n",
    "    t1.right(90)\n",
    "    t1.fd(50)\n",
    "    t1.left(90)\n",
    "    t1.fd(400)\n",
    "    t1.left(90)\n",
    "    t1.fd(50)\n",
    "    t1.right(90)\n",
    "    t1.penup()\n",
    "    t1.setpos(-200, -25)\n",
    "    t1.pendown()\n",
    "\n",
    "    j=-25\n",
    "\n",
    "    while j>-200:\n",
    "        t1.penup()\n",
    "        t1.setpos(-200, j)\n",
    "        t1.pendown()\n",
    "        eight_squares(50)\n",
    "        j-=50\n",
    "\n",
    "    t1.penup()\n",
    "    t1.setpos(-50,275)\n",
    "    t1.pendown()\n",
    "    t1.setpos(50,175)\n",
    "\n",
    "    t1.penup()\n",
    "    t1.setpos(-50,175)\n",
    "    t1.pendown()\n",
    "    t1.setpos(50, 275)\n",
    "\n",
    "    t1.penup()\n",
    "    t1.setpos(-50,-175)\n",
    "    t1.pendown()\n",
    "    t1.setpos(50,-75)\n",
    "\n",
    "    t1.penup()\n",
    "    t1.setpos(-50,-75)\n",
    "    t1.pendown()\n",
    "    t1.setpos(50,-175)\n",
    "\n",
    "    t1.penup()\n",
    "    t1.setpos(-205,280)\n",
    "    t1.pendown()\n",
    "    t1.pensize(5)\n",
    "    t1.right(90)\n",
    "    t1.fd(460)\n",
    "    t1.left(90)\n",
    "    t1.fd(410)\n",
    "    t1.left(90)\n",
    "    t1.fd(460)\n",
    "    t1.left(90)\n",
    "    t1.fd(410)\n",
    "    t1.penup()\n",
    "    t1.pensize(2)\n",
    "    t1.setpos(-225,300)\n",
    "    t1.pendown()\n",
    "    t1.left(90)\n",
    "    t1.fd(500)\n",
    "    t1.left(90)\n",
    "    t1.fd(450)\n",
    "    t1.left(90)\n",
    "    t1.fd(500)\n",
    "    t1.left(90)\n",
    "    t1.fd(450)\n",
    "\n",
    "    b1=-160\n",
    "    b2=-153\n",
    "    b3=-147\n",
    "    b4=-140\n",
    "\n",
    "    for b in range(1,3):\n",
    "        b11 = 185\n",
    "        b12 = 178\n",
    "        b13 = 172\n",
    "        b14 = 165\n",
    "        for f in range(1,3):\n",
    "            t1.penup()\n",
    "            t1.setpos(b1,b12)\n",
    "            t1.pendown()\n",
    "            t1.setpos(b2,b12)\n",
    "            t1.setpos(b2,b11)\n",
    "\n",
    "            t1.penup()\n",
    "            t1.setpos(b3,b11)\n",
    "            t1.pendown()\n",
    "            t1.setpos(b3,b12)\n",
    "            t1.setpos(b4,b12)\n",
    "\n",
    "            t1.penup()\n",
    "            t1.setpos(b1,b13)\n",
    "            t1.pendown()\n",
    "            t1.setpos(b2,b13)\n",
    "            t1.setpos(b2,b14)\n",
    "\n",
    "            t1.penup()\n",
    "            t1.setpos(b3,b14)\n",
    "            t1.pendown()\n",
    "            t1.setpos(b3,b13)\n",
    "            t1.setpos(b4,b13)\n",
    "            b11-=250\n",
    "            b13-=250\n",
    "            b12-=250\n",
    "            b14-=250\n",
    "        b1+=300\n",
    "        b2+=300\n",
    "        b3+=300\n",
    "        b4+=300\n",
    "\n",
    "\n",
    "    a1 = -197\n",
    "    a2 = -190\n",
    "    a3 = -110\n",
    "    a4 = -103\n",
    "    for a in range(1,5):\n",
    "        a11=135\n",
    "        a12=128\n",
    "        a13=122\n",
    "        a14=115\n",
    "        for e in range(1,3):\n",
    "            t1.penup()\n",
    "            t1.setpos(a1,a11)\n",
    "            t1.pendown()\n",
    "            t1.setpos(a1,a12)\n",
    "            t1.setpos(a2,a12)\n",
    "\n",
    "            t1.penup()\n",
    "            t1.setpos(a1,a14)\n",
    "            t1.pendown()\n",
    "            t1.setpos(a1,a13)\n",
    "            t1.setpos(a2,a13)\n",
    "\n",
    "            t1.penup()\n",
    "            t1.setpos(a4,a11)\n",
    "            t1.pendown()\n",
    "            t1.setpos(a4,a12)\n",
    "            t1.setpos(a3,a12)\n",
    "\n",
    "            t1.penup()\n",
    "            t1.setpos(a4,a14)\n",
    "            t1.pendown()\n",
    "            t1.setpos(a4,a13)\n",
    "            t1.setpos(a3,a13)\n",
    "\n",
    "            a11-=150\n",
    "            a12-=150\n",
    "            a13-=150\n",
    "            a14-=150\n",
    "        a1+=100\n",
    "        a2+=100\n",
    "        a3+=100\n",
    "        a4+=100\n",
    "\n",
    "    turtle.done()\n",
    "\n",
    "vebancotuong(1)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "00b33890",
   "metadata": {},
   "outputs": [],
   "source": [
    "\n",
    "\n",
    "\n",
    "\n",
    "\n"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
